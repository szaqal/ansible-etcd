---
- name: ETCD-CLUSTER
  hosts: etcd
  become: true

   

  tasks:

    - name:
      set_fact:
        ectd_values: []

    - name:
      set_fact:
        hosts_detected: "{{ groups['etcd']}}" 

    - name:
      set_fact:
        ectd_values: "{{ectd_values}} + ['{{item}}={{ hostvars[item].ansible_ssh_host}}']"
      with_items:
        - "{{ hosts_detected }}"



    - name:
      set_fact:
        aaa: "{{ectd_values|join(',')}}"

    - name: 'debug'
      debug: msg="{{aaa}}"


    - name: 'Install unzip/tar'
      dnf:  
        name:
          - unzip
          - tar

    - name: 'Pull cfssl'
      get_url:
        url: "{{item.url}}"
        dest: '/opt'
        checksum: "{{item.checksum}}"
        mode: 0744        
      loop:
        - { url: '{{cfssl_download_url}}/v{{cfssl_version}}/cfssl_{{cfssl_version}}_linux_amd64', checksum: "md5:212fc80b19cd3182bb54882c9f7c5f61" }
        - { url: '{{cfssl_download_url}}/v{{cfssl_version}}/cfssljson_{{cfssl_version}}_linux_amd64', checksum: "md5:2d4e4fa8b44e12da6b19c0aba1cb65d5" }

    - name: "Pull etcd"
      get_url:
        url: '{{google_url}}/{{etcd_version}}/etcd-{{etcd_version}}-linux-amd64.tar.gz'
        dest: "{{ ansible_env.HOME }}"
        checksum: md5:8107d61ea56d32f4c90581bb3a22e021
    
    
    - name: 'Unpack etcd'
      unarchive:
        src: '{{ ansible_env.HOME }}/etcd-{{etcd_version}}-linux-amd64.tar.gz'
        dest: '/opt'
        remote_src: yes

    - name: 'Symlinks'        
      file: src="{{item.src}}" dest="{{item.dest}}" state=link
      loop:
        - { src: '/opt/etcd-{{etcd_version}}-linux-amd64', dest: "/opt/etcd" }
        - { src: '/opt/etcd/etcd', dest: "/usr/bin/etcd" }
        - { src: '/opt/cfssl_{{cfssl_version}}_linux_amd64', dest: "/usr/bin/cfssl" }
        - { src: '/opt/cfssljson_{{cfssl_version}}_linux_amd64', dest: "/usr/bin/cfssljson" }

    - name: 'etcd work dirs'
      file: path={{item.path}} state=directory    
      loop:
        - {path: '{{etcd_data_dir}}'}
        - {path: '{{etcd_wal_dir}}'}
        - {path: '{{etcd_certs_dir}}'}













    - name: 'templates'
      template: src='{{item.src}}' dest='{{item.dest}}' mode=0744       
      loop:
        - {src: 'ca-csr.json.j2', dest: '{{etcd_certs_dir}}/ca-csr.jso'}
        - {src: 'ca-config.json.j2', dest: '{{etcd_certs_dir}}/ca-config.json'}
        - {src: 'certgen.sh.j2', dest: '/tmp/certgen.sh'}
        - {src: 'etcd.service.j2', dest: '/etc/systemd/system/etcd.service'}


    - name: 'CA cert'
      command: '/tmp/certgen.sh'